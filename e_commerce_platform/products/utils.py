import csv
from typing import List, Dict
from io import StringIO
from .models import Product


def export_to_csv(data: List[Dict[str, any]]) -> StringIO:
    """
    Exports a list of dictionaries to a CSV format and returns it as a StringIO object.

    Args:
        data (List[Dict[str, any]]): A list of dictionaries where each dictionary represents a row in the CSV.
            The keys of the dictionaries should be the same and represent the CSV column headers.

    Returns:
        StringIO: An in-memory file-like object containing the CSV data.

    Example:
        data = [
            {"name": "Alice", "age": 30, "city": "New York"},
            {"name": "Bob", "age": 25, "city": "Los Angeles"}
        ]
        csv_output = export_to_csv(data)
        print(csv_output.getvalue())
    """
    output = StringIO()
    writer = csv.DictWriter(output, fieldnames=data[0].keys())
    writer.writeheader()
    writer.writerows(data)
    return output


def generate_summary() -> StringIO:
    """
    Generates a summary report of the highest-selling product in each category.

    The report includes the following details for each category:
        - category: The name of the product category.
        - total_revenue: The total revenue generated by all products in the category.
        - top_product: The name of the product with the highest quantity sold in the category.
        - top_product_quantity_sold: The quantity sold of the top product in the category.

    The summary is exported as a CSV file and returned as a StringIO object.

    Returns:
        StringIO: An in-memory file-like object containing the CSV data of the summary report.
    """
    categories = Product.objects.values("category").distinct()
    summary_data = []

    for category in categories:
        category_name = category["category"]
        products = Product.objects.filter(category=category_name)

        # calculating total revenue
        total_revenue = sum([product.price * product.quantity_sold for product in products])
        top_product = max(products, key=lambda p: p.quantity_sold)

        summary_data.append({
            "category": category_name,
            "total_revenue": total_revenue,
            "top_product": top_product.product_name,
            "top_product_quantity_sold": top_product.quantity_sold
        })

    summary = export_to_csv(summary_data)
    return summary
